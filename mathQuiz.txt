using System;

namespace MathQuiz
{
    class Program
    {
        /* Math Quiz multiplication and divison, addition and subtraction
         * 2021-01-30, Thomas Salzgeber
         * Release 1.0.0.2
         */

        const string correct = " Correct! ";
        const string notCorrect = " Not correct! The correct result is: ";
        const string loopInfo = " Enter for next; ESC to exit";
        const string textBreak = " --------------------------------------------";
        

        static void Main(string[] args)
        {
            int questionCorrect = 0, questionWrong = 0, questionSum = 0, wrongCharacter = 0, choiceNumber;
            int sumMult = 0, sumDiv1 = 0, sumDiv2 = 0, sumDiv3 = 0, sumAdd = 0, sumSub = 0;
            bool randomChoice = false;
            int calcResultconvert, resultPrecentage;
            double calcNumber1, calcNumber2, resultInput, calcResult, calcResultRemainder;
            string choiceOption, calcResultConsole, remainderTotal, resultWrong;
            string choiceError = " Choose 1, 2, 3, 4, 5, 6, 9 or 0";
            string characterError = " Wrong input. Only numbers allowed!";
            string copyright = " (c) 2021 Thomas Salzgeber - evolutionweb.ca";
            string markText = " Mark: ";
            string markA = "A", markB = "B", markC1 = "C+", markC = "C", markC2 = "C-", markF = "F";

            // Division Symbol
            char d1 = (char)247;
            string divisionSymbol = " " + d1.ToString() + " ";

            Console.WriteLine(" ");
            Console.WriteLine(" +----------------------------------------------------+");
            Console.WriteLine(" |                                                    |");
            Console.WriteLine(" | Choose a Math Quiz:                                |");
            Console.WriteLine(" |                                                    |");
            Console.WriteLine(" | 1 - Multiplication                                 |");
            Console.WriteLine(" | 2 - Division                                       |");
            Console.WriteLine(" | 3 - Division with remainder (Result format: 123r4) |");
            Console.WriteLine(" | 4 - Division (Rounded to 2 decimal places)         |");
            Console.WriteLine(" | 5 - Addition                                       |");
            Console.WriteLine(" | 6 - Subtraction                                    |");
            Console.WriteLine(" | 9 - Random operation from Quiz 1 to 6              |");
            Console.WriteLine(" | 0 - Exit                                           |");
            Console.WriteLine(" |                                                    |");
            Console.WriteLine(" +----------------------------------------------------+");
            Console.WriteLine(" ");
            Console.Write(" > ");
            choiceOption = Console.ReadLine();

            // convert input string to integer, and verify is the convert succesfull
            if (int.TryParse(choiceOption, out choiceNumber))
            {
                // Verify only 1 to 6, 9 or 0 is choosen
                while ((choiceNumber != 1) && (choiceNumber != 2) && (choiceNumber != 3) && (choiceNumber != 4) && (choiceNumber != 5) && (choiceNumber != 6) && (choiceNumber != 9) && (choiceNumber != 0))
                {
                    if (choiceNumber == 0)
                    {
                        Environment.Exit(0);
                    }
                    Console.WriteLine(choiceError);
                    Console.Write(" > ");
                    choiceOption = Console.ReadLine();
                    int.TryParse(choiceOption, out choiceNumber);
                }
            }
            else
            {
                Console.WriteLine(characterError);
                Console.ReadLine();
                Environment.Exit(0);
            }

            Console.Write(textBreak);
            randomChoice = choiceNumber != 9 ? false : true;

            do
            {
                if (randomChoice)
                {
                    choiceNumber = Convert.ToInt32(GenerateRand(1, 7));
                }

                questionSum++;

                switch (choiceNumber)
                {
                    case 1:
                        sumMult++;
                        calcNumber1 = GenerateRand(10, 100);
                        calcNumber2 = GenerateRand(2, 100);

                        Console.Write(randomChoice ? "\n Multiplication" : string.Empty);
                        Console.Write("\n (" + questionSum + ") " + calcNumber1 + " x " + calcNumber2 + " = ");
                        calcResultConsole = Console.ReadLine().TrimEnd(' ');

                        if (double.TryParse(calcResultConsole, out resultInput))
                        {
                            calcResult = Multiplication(calcNumber1, calcNumber2);

                            if (calcResult == resultInput)
                            {
                                questionCorrect++;
                                ResultCorrect();
                            }
                            else
                            {
                                questionWrong++;
                                resultWrong = calcResult.ToString();
                                ResultWrong(resultWrong);
                            }
                        }
                        else
                        {
                            wrongCharacter++;
                            Console.WriteLine(characterError);
                        }
                        break;
                    case 2:
                        sumDiv1++;
                        calcNumber1 = GenerateRand(10, 100);
                        calcNumber2 = GenerateRand(2, 10);

                        calcResult = calcNumber1 * calcNumber2;

                        Console.Write(randomChoice ? "\n Division full number, without remainder" : string.Empty);
                        Console.Write("\n (" + questionSum + ") " + calcResult + divisionSymbol + calcNumber2 + " = ");
                        calcResultConsole = Console.ReadLine().TrimEnd(' ');

                        if (double.TryParse(calcResultConsole, out resultInput))
                        {
                            calcResult = Division(calcResult, calcNumber2);

                            if (calcResult == resultInput)
                            {
                                questionCorrect++;
                                ResultCorrect();
                            }
                            else
                            {
                                questionWrong++;
                                resultWrong = calcResult.ToString();
                                ResultWrong(resultWrong);
                            }
                        }
                        else
                        {
                            wrongCharacter++;
                            Console.WriteLine(characterError);
                        }
                        break;
                    case 3:
                        // Division with remainder
                        sumDiv2++;
                        calcNumber1 = GenerateRand(10, 1000);
                        calcNumber2 = GenerateRand(2, 10);

                        Console.Write(randomChoice ? "\n Division with remainder" : string.Empty);
                        Console.Write("\n (" + questionSum + ") " + calcNumber1 + divisionSymbol + calcNumber2 + " = ");
                        calcResultConsole = Console.ReadLine().TrimEnd(' ');

                        calcResult = Division(calcNumber1, calcNumber2);
                        calcResultconvert = (int)calcResult;

                        // Calculate the remainer of division
                        calcResultRemainder = calcNumber1 % calcNumber2;

                        if (calcResultRemainder == 0)
                        {
                            remainderTotal = calcResultconvert.ToString();
                            calcResultConsole = calcResultConsole.TrimEnd('r', '0');
                        }
                        else
                        {
                            remainderTotal = calcResultconvert + "r" + calcResultRemainder;
                        }

                        if (remainderTotal == calcResultConsole)
                        {
                            questionCorrect++;
                            ResultCorrect();
                        }
                        else
                        {
                            questionWrong++;
                            ResultWrong(remainderTotal);
                        }
                        break;
                    case 4:
                        // Long division rounded to 2 decimals
                        sumDiv3++;
                        calcNumber1 = GenerateRand(10, 1000);
                        calcNumber2 = GenerateRand(2, 10);

                        Console.Write(randomChoice ? "\n Division (Rounded to 2 decimal places" : string.Empty);
                        Console.Write("\n (" + questionSum + ") " + calcNumber1 + divisionSymbol + calcNumber2 + " = ");
                        calcResultConsole = Console.ReadLine().TrimEnd(' ');

                        if (double.TryParse(calcResultConsole, out resultInput))
                        {
                            calcResult = calcNumber1 / calcNumber2;

                            // Round division result to 2 decimals
                            calcResult = Math.Round(calcResult, 2, MidpointRounding.AwayFromZero);

                            if (calcResult == resultInput)
                            {
                                questionCorrect++;
                                ResultCorrect();
                            }
                            else
                            {
                                questionWrong++;
                                resultWrong = calcResult.ToString();
                                ResultWrong(resultWrong);
                            }
                        }
                        else
                        {
                            wrongCharacter++;
                            Console.WriteLine(characterError);
                        }
                        break;
                    case 5:
                        // Addition
                        sumAdd++;
                        calcNumber1 = GenerateRand(2, 100000);
                        calcNumber2 = GenerateRand(2, 100000);

                        Console.Write(randomChoice ? "\n Addition" : string.Empty);
                        Console.Write("\n (" + questionSum + ") " + calcNumber1 + " + " + calcNumber2 + " = ");
                        calcResultConsole = Console.ReadLine().TrimEnd(' ');

                        if (double.TryParse(calcResultConsole, out resultInput))
                        {
                            calcResult = Addition(calcNumber1, calcNumber2);

                            if (calcResult == resultInput)
                            {
                                questionCorrect++;
                                ResultCorrect();
                            }
                            else
                            {
                                questionWrong++;
                                resultWrong = calcResult.ToString();
                                ResultWrong(resultWrong);
                            }
                        }
                        else
                        {
                            wrongCharacter++;
                            Console.WriteLine(characterError);
                        }
                        break;

                    case 6:
                        // Subtraction
                        sumSub++;
                        calcNumber1 = GenerateRand(2, 1000);
                        calcNumber2 = GenerateRand(2, 1000);

                        calcResult = calcNumber1 + calcNumber2;
                        Console.Write(randomChoice ? "\n Subtraction" : string.Empty);
                        Console.Write("\n (" + questionSum + ") " + calcResult + " - " + calcNumber2 + " = ");
                        calcResultConsole = Console.ReadLine().TrimEnd(' ');

                        if (double.TryParse(calcResultConsole, out resultInput))
                        {
                            calcResult = Subtraction(calcResult, calcNumber2);

                            if (calcResult == resultInput)
                            {
                                questionCorrect++;
                                ResultCorrect();
                            }
                            else
                            {
                                questionWrong++;
                                resultWrong = calcResult.ToString();
                                ResultWrong(resultWrong);
                            }
                        }
                        else
                        {
                            wrongCharacter++;
                            Console.WriteLine(characterError);
                        }
                        break;

                    default:
                        break;
                }
            } while (Console.ReadKey(true).Key != ConsoleKey.Escape);

            resultPrecentage = questionCorrect * 100 / questionSum;
            Console.WriteLine("");
            Console.Write($" Number of math questions answered: {questionSum}");
            Console.WriteLine(randomChoice ? $"\n (Multiplication: {sumMult} - Division: {sumDiv1} - Divison (remainder): {sumDiv2} - Division (decimal): {sumDiv3} - Addition: {sumAdd} - Subtraction: {sumSub})" : string.Empty);
            Console.WriteLine($" Correctly solved: {questionCorrect}");
            Console.WriteLine($" Answered wrong: {questionWrong}");
            Console.WriteLine($" Wrong characters entered: {wrongCharacter}");
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine($" Percentage: {resultPrecentage}" + "%");

            // Show Marks
            if (resultPrecentage >= 86)
            {
                Console.WriteLine(markText + markA);
            }
            else if (resultPrecentage >= 73 && resultPrecentage <= 85)
            {
                Console.WriteLine(markText + markB);
            }
            else if (resultPrecentage >= 67 && resultPrecentage <= 72)
            {
                Console.WriteLine(markText + markC1);
            }
            else if (resultPrecentage >= 60 && resultPrecentage <= 66)
            {
                Console.WriteLine(markText + markC);
            }
            else if (resultPrecentage >= 50 && resultPrecentage <= 59)
            {
                Console.WriteLine(markText + markC2);
            }
            else
            {
                Console.WriteLine(markText + markF);
            }

            // copyright info at the end
            Console.ResetColor();
            Console.WriteLine("");
            Console.WriteLine(copyright);
            Console.ReadLine();
            Environment.Exit(0);
        }

        public static double GenerateRand(int minValue, int maxValue)
        {
            //Method generate random numbers
            Random rnd = new Random();
            return rnd.Next(minValue, maxValue);
        }

        public static double Addition(double number1, double number2)
        {
            return number1 + number2;
        }

        public static double Subtraction(double number1, double number2)
        {
            return number1 - number2;
        }

        public static double Multiplication(double number1, double number2)
        {
            return number1 * number2;
        }

        public static double Division(double number1, double number2)
        {
            return number1 / number2;
        }

        public static void ResultCorrect()
        {
            
            Console.WriteLine(correct);
            Console.WriteLine(loopInfo);
            Console.Write(textBreak);
        }

        public static void ResultWrong(string result)
        {
            
            Console.Write(notCorrect);
            Console.ForegroundColor = ConsoleColor.Red;
            Console.WriteLine(result);
            Console.ResetColor();
            Console.WriteLine(loopInfo);
            Console.WriteLine(textBreak);
        }

    }
}